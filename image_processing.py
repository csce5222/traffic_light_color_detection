# -*- coding: utf-8 -*-
"""Untitled70.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hLlFThC2b11daw3SarD9qaNkOxwX0Kx6
"""

# rgb_to_gray and gray_to_rgb

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

# Function to convert an RGB image to grayscale
def rgb_to_gray(image: np.ndarray) -> np.ndarray:
    gray_channel = 0.21 * image[:, :, 2] + 0.71 * image[:, :, 1] + 0.08 * image[:, :, 0]
    return gray_channel.astype(np.uint8)

# Function to convert a grayscale image back to RGB using an original image
def gray_to_rgb(grayscale_image: np.ndarray, original_image: np.ndarray) -> np.ndarray:
    height, width = grayscale_image.shape[:2]
    color_image = np.zeros((height, width, 3), dtype=np.uint8)

    for i in range(height):
        for j in range(width):
            gray_pixel = grayscale_image[i, j]
            color_image[i, j] = [original_image[i, j, 0], original_image[i, j, 1], original_image[i, j, 2]]

    return color_image

# Generalized path for the image
image_path = 'your_image_path_here.jpg'  # Change this to the actual path of your image

# Load the original image
image = cv2.imread(image_path)

if image is not None:
    # Display the original image
    cv2_imshow(image)

    # Convert the original image to grayscale
    grayscale_image = rgb_to_gray(image)

    # Display the grayscale image
    cv2_imshow(grayscale_image)

    # Convert the grayscale image back to color
    grayscale_to_color = gray_to_rgb(grayscale_image, image)

    # Display the color image from grayscale
    cv2_imshow(grayscale_to_color)
else:
    print("Image not found.")